services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    image: mlx-deploy-search-api
    volumes:
      - ./minio:/app/data
    environment:
      - DATABASE_URL=postgres://logger:secure_password@postgres:5432/user_logs
    ports:
      - "8000:8000"

  front:
    build: ./front
    image: mlx-deploy-search-front
    environment:
      - API_HOST=api
      - API_PORT=8000
    ports:
          - "8501:8501"
    depends_on:
      - api

  nginx:
    build: ./nginx
    image: nginx:latest
    ports:
      - 80:80
    depends_on:
      - api
      - front
  
  postgres:
    build: ./postgres
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=logger
      - POSTGRES_PASSWORD=secure_password
      - POSTGRES_DB=user_logs
      - POSTGRES_HOST_AUTH_METHOD=trust  # Add this
      - POSTGRES_INITDB_ARGS=--auth-host=trust 
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "logger", "-d", "user_logs"]
      interval: 10s
      timeout: 5s
      retries: 5

  finetune:
    build:
      context: .
      dockerfile: finetune/Dockerfile
    image: mlx-deploy-search-finetune
    volumes:
      - ./minio:/app/data:rw
    environment:
      - DATABASE_URL=postgres://logger:secure_password@postgres:5432/user_logs
    depends_on:
      postgres:
        condition: service_healthy
        
    
volumes:
  postgres_data:
